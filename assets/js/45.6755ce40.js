(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{556:function(v,_,e){"use strict";e.r(_);var d=e(2),c=Object(d.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"正则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[v._v("#")]),v._v(" 正则")]),v._v(" "),_("p",[v._v("正则表达式是一种用于匹配和操作文本的强大工具，它是由一系列字符和特殊字符组成的模式，用于描述要匹配的文本模式。")]),v._v(" "),_("p",[v._v("正则表达式可以在文本中查找、替换、提取和验证特定的模式。")]),v._v(" "),_("h2",{attrs:{id:"基本语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[v._v("#")]),v._v(" 基本语法")]),v._v(" "),_("ul",[_("li",[_("code",[v._v(".")]),v._v("：匹配除换行符以外的任意单个字符。")]),v._v(" "),_("li",[_("code",[v._v("*")]),v._v("：匹配前面的字符零次或多次。")]),v._v(" "),_("li",[_("code",[v._v("+")]),v._v("：匹配前面的字符一次或多次。")]),v._v(" "),_("li",[_("code",[v._v("?")]),v._v("：匹配前面的字符零次或一次。")]),v._v(" "),_("li",[_("code",[v._v("{n}")]),v._v("：匹配前面的字符恰好 n 次。")]),v._v(" "),_("li",[_("code",[v._v("{n,}")]),v._v("：匹配前面的字符至少 n 次。")]),v._v(" "),_("li",[_("code",[v._v("{n,m}")]),v._v("：匹配前面的字符至少 n 次，至多 m 次。")]),v._v(" "),_("li",[_("code",[v._v("[]")]),v._v("：匹配括号内的任意一个字符。")]),v._v(" "),_("li",[_("code",[v._v("[^]")]),v._v("：匹配不在括号内的任意一个字符。")]),v._v(" "),_("li",[_("code",[v._v("|")]),v._v("：表示“或”，匹配左边或右边的表达式。")]),v._v(" "),_("li",[_("code",[v._v("^")]),v._v("：匹配输入字符串的开始位置。")]),v._v(" "),_("li",[_("code",[v._v("$")]),v._v("：匹配输入字符串的结束位置。")]),v._v(" "),_("li",[_("code",[v._v("()")]),v._v("：用于分组，可以提取匹配的子字符串。")]),v._v(" "),_("li",[_("code",[v._v("\\")]),v._v("：转义字符，用于匹配特殊字符本身。")]),v._v(" "),_("li",[_("code",[v._v("\\d")]),v._v("：匹配数字，等价于 "),_("code",[v._v("[0-9]")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("\\D")]),v._v("：匹配非数字字符，等价于 "),_("code",[v._v("[^0-9]")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("\\w")]),v._v("：匹配字母、数字或下划线，等价于 "),_("code",[v._v("[a-zA-Z0-9_]")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("\\W")]),v._v("：匹配非字母、数字或下划线，等价于 "),_("code",[v._v("[^a-zA-Z0-9_]")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("\\s")]),v._v("：匹配空白字符（空格、制表符、换行符等），等价于 "),_("code",[v._v("[ \\t\\n\\r\\f\\v]")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("\\S")]),v._v("：匹配非空白字符，等价于 "),_("code",[v._v("[^ \\t\\n\\r\\f\\v]")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("\\b")]),v._v("：匹配单词边界。")]),v._v(" "),_("li",[_("code",[v._v("\\B")]),v._v("：匹配非单词边界。")]),v._v(" "),_("li",[_("code",[v._v("(?=...)")]),v._v("：正向前瞻，匹配后面跟着指定模式的字符串。")]),v._v(" "),_("li",[_("code",[v._v("(?!...)")]),v._v("：负向前瞻，匹配后面不跟着指定模式的字符串。")]),v._v(" "),_("li",[_("code",[v._v("(?<=...)")]),v._v("：正向后顾，匹配前面跟着指定模式的字符串。")]),v._v(" "),_("li",[_("code",[v._v("(?<!...)")]),v._v("：负向后顾，匹配前面不跟着指定模式的字符串。")]),v._v(" "),_("li",[_("code",[v._v("(?P<name>...)")]),v._v("：命名分组，可以通过名称引用匹配的子字符串。")]),v._v(" "),_("li",[_("code",[v._v("(?P=name)")]),v._v("：引用命名分组。")]),v._v(" "),_("li",[_("code",[v._v("(?i)")]),v._v("：忽略大小写匹配。")]),v._v(" "),_("li",[_("code",[v._v("(?m)")]),v._v("：多行模式，"),_("code",[v._v("^")]),v._v(" 和 "),_("code",[v._v("$")]),v._v(" 匹配每一行的开始和结束。")]),v._v(" "),_("li",[_("code",[v._v("(?s)")]),v._v("：单行模式，"),_("code",[v._v(".")]),v._v(" 匹配包括换行符在内的任意字符。")]),v._v(" "),_("li",[_("code",[v._v("(?x)")]),v._v("：扩展模式，允许在正则表达式中使用空格和注释。")]),v._v(" "),_("li",[_("code",[v._v("(?U)")]),v._v("：非贪婪模式，匹配尽可能少的字符。")]),v._v(" "),_("li",[_("code",[v._v("(?P<name>...)")]),v._v("：命名分组，可以通过名称引用匹配的子字符串。")]),v._v(" "),_("li",[_("code",[v._v("(?P=name)")]),v._v("：引用命名分组。")])]),v._v(" "),_("h2",{attrs:{id:"示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[v._v("#")]),v._v(" 示例")]),v._v(" "),_("p",[v._v("匹配邮箱地址："),_("code",[v._v("[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}")])]),v._v(" "),_("p",[v._v("解析：匹配一个或多个字母、数字、点、下划线、百分号、加号或减号，后跟一个 @ 符号，接着是一个或多个字母、数字、点或减号，最后是一个点和两个或更多字母。")]),v._v(" "),_("p",[v._v("匹配电话号码："),_("code",[v._v("(\\+?\\d{1,3})?[-.\\s]?(\\(?\\d{2,4}\\)?)?[-.\\s]?(\\d{3,4})[-.\\s]?(\\d{4})")])]),v._v(" "),_("p",[v._v("解析：可选的国际区号（1-3位数字），后跟可选的空格、点或连字符，接着是可选的括号内的2-4位数字，后跟可选的空格、点或连字符，接着是3-4位数字，最后是4位数字。")]),v._v(" "),_("p",[v._v("匹配日期格式（YYYY-MM-DD）："),_("code",[v._v("(\\d{4})-(\\d{2})-(\\d{2})")])]),v._v(" "),_("p",[v._v("解析：匹配4位数字（年份），后跟一个连字符，接着是2位数字（月份），再跟一个连字符，最后是2位数字（日期）。")]),v._v(" "),_("p",[v._v("匹配URL："),_("code",[v._v("https?://[a-zA-Z0-9.-]+(?:/[a-zA-Z0-9._%+-]*)*")])]),v._v(" "),_("p",[v._v("解析：匹配以 http:// 或 https:// 开头，后跟一个或多个字母、数字、点或减号，接着是可选的斜杠和一个或多个字母、数字、点、下划线、百分号、加号或减号。")]),v._v(" "),_("p",[v._v("匹配IP地址："),_("code",[v._v("(?:\\d{1,3}\\.){3}\\d{1,3}")])]),v._v(" "),_("p",[v._v("解析：匹配3个1-3位数字，后跟一个点，最后是1-3位数字。")]),v._v(" "),_("p",[v._v("匹配身份证号码："),_("code",[v._v("(\\d{17}|\\d{15}|\\d{18})")])]),v._v(" "),_("p",[v._v("解析：匹配15位或17位数字，或18位数字（最后一位可以是数字或字母X）。")]),v._v(" "),_("p",[v._v("匹配中文字符："),_("code",[v._v("[\\u4e00-\\u9fa5]")])]),v._v(" "),_("p",[v._v("匹配非中文字符："),_("code",[v._v("[^\\u4e00-\\u9fa5]")])]),v._v(" "),_("p",[v._v("匹配HTML标签："),_("code",[v._v("<[^>]+>")])]),v._v(" "),_("p",[v._v("解析：匹配以 < 开头和 > 结尾的任意字符，表示HTML标签。")]),v._v(" "),_("p",[v._v("匹配JSON字符串："),_("code",[v._v('"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"')])]),v._v(" "),_("p",[v._v("匹配Markdown链接："),_("code",[v._v("\\[([^\\]]+)\\]\\(([^)]+)\\)")])]),v._v(" "),_("p",[v._v("解析：匹配以 [ 开头和 ] 结尾的链接文本，后跟一个 ( 和 ) 包围的链接地址。")]),v._v(" "),_("p",[v._v("匹配Markdown图片："),_("code",[v._v("!\\[([^\\]]+)\\]\\(([^)]+)\\)")])]),v._v(" "),_("p",[v._v("解析：匹配以 [ 开头和 ] 结尾的链接文本，后跟一个 ( 和 ) 包围的链接地址。")]),v._v(" "),_("p",[v._v("匹配Markdown标题："),_("code",[v._v("^(#{1,6})\\s+(.*)$")])]),v._v(" "),_("p",[v._v("解析：匹配以1到6个井号开头的标题，后跟一个或多个空格和标题文本。")]),v._v(" "),_("p",[v._v("匹配Markdown列表："),_("code",[v._v("^(\\s*[-*+]|\\d+\\.)\\s+(.*)$")])]),v._v(" "),_("p",[v._v("解析：匹配以空格、连字符、星号或加号开头的无序列表，或以数字和点开头的有序列表。")]),v._v(" "),_("p",[v._v("匹配Markdown代码块："),_("code",[v._v("^```(?:\\w+)?\\n([\\s\\S]*?)\\n```$")])]),v._v(" "),_("p",[v._v("解析：匹配以 ``` 开头和结尾的代码块，代码块可以有可选的语言标识。")]),v._v(" "),_("p",[v._v("匹配Markdown引用："),_("code",[v._v("^>\\s+(.*)$")])]),v._v(" "),_("p",[v._v("解析：匹配以 > 开头的引用行，后跟一个或多个空格和任意文本。")]),v._v(" "),_("p",[v._v("匹配Markdown表格："),_("code",[v._v("^\\|(.+)\\|\\n^\\|[-:]+[-|:]*\\|\\n^(\\|.+\\|)$")])]),v._v(" "),_("p",[v._v("解析：匹配以 | 开头和结尾的表格行，包含至少一个单元格，第二行必须包含至少一个 - 或 :，第三行包含至少一个单元格。")]),v._v(" "),_("h2",{attrs:{id:"js中的正则表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js中的正则表达式"}},[v._v("#")]),v._v(" js中的正则表达式")]),v._v(" "),_("p",[v._v("在 JavaScript 中，正则表达式可以通过两种方式创建：")]),v._v(" "),_("ol",[_("li",[v._v("使用字面量语法："),_("code",[v._v("/pattern/flags")]),v._v("，比如 "),_("code",[v._v("/abc/i")]),v._v(' 表示匹配字符串 "abc"，并且忽略大小写。')]),v._v(" "),_("li",[v._v("使用构造函数："),_("code",[v._v("new RegExp('pattern', 'flags')")]),v._v("，比如 "),_("code",[v._v("new RegExp('abc', 'i')")]),v._v("。")]),v._v(" "),_("li",[v._v("正则表达式的标志（flags）可以是：\n"),_("ul",[_("li",[_("code",[v._v("g")]),v._v("：全局匹配，查找所有匹配项。")]),v._v(" "),_("li",[_("code",[v._v("i")]),v._v("：忽略大小写。")]),v._v(" "),_("li",[_("code",[v._v("m")]),v._v("：多行匹配，"),_("code",[v._v("^")]),v._v(" 和 "),_("code",[v._v("$")]),v._v(" 匹配每一行的开始和结束。")]),v._v(" "),_("li",[_("code",[v._v("s")]),v._v("：单行模式，"),_("code",[v._v(".")]),v._v(" 匹配包括换行符在内的任意字符。")]),v._v(" "),_("li",[_("code",[v._v("u")]),v._v("：启用 Unicode 匹配。")]),v._v(" "),_("li",[_("code",[v._v("y")]),v._v("：粘性匹配，从字符串的当前位置开始匹配。")])])])]),v._v(" "),_("p",[v._v("正则表达式对象在 JavaScript 中是一个内置的对象，可以使用以下方法：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("test(string)")]),v._v("：测试字符串是否匹配正则表达式，返回布尔值。")]),v._v(" "),_("li",[_("code",[v._v("exec(string)")]),v._v("：执行正则表达式匹配，返回一个数组或 null。")]),v._v(" "),_("li",[_("code",[v._v("toString()")]),v._v("：返回正则表达式的字符串表示形式。")]),v._v(" "),_("li",[_("code",[v._v("source")]),v._v("：返回正则表达式的模式部分。")]),v._v(" "),_("li",[_("code",[v._v("flags")]),v._v("：返回正则表达式的标志部分。")]),v._v(" "),_("li",[_("code",[v._v("lastIndex")]),v._v("：获取或设置下一个匹配的起始位置（仅在使用 "),_("code",[v._v("g")]),v._v(" 或 "),_("code",[v._v("y")]),v._v(" 标志时有效）。")]),v._v(" "),_("li",[_("code",[v._v("compile(pattern, flags)")]),v._v("：重新编译正则表达式。")]),v._v(" "),_("li",[_("code",[v._v("test()")]),v._v(" 和 "),_("code",[v._v("exec()")]),v._v(" 方法可以用于测试字符串是否匹配正则表达式。")]),v._v(" "),_("li",[_("code",[v._v("match()")]),v._v(" 方法可以用于在字符串中查找匹配项。")]),v._v(" "),_("li",[_("code",[v._v("replace()")]),v._v(" 方法可以用于替换字符串中的匹配项。")]),v._v(" "),_("li",[_("code",[v._v("split()")]),v._v(" 方法可以用于将字符串分割为数组。")]),v._v(" "),_("li",[_("code",[v._v("search()")]),v._v(" 方法可以用于查找字符串中匹配正则表达式的第一个位置。")]),v._v(" "),_("li",[_("code",[v._v("matchAll()")]),v._v(" 方法可以用于查找字符串中所有匹配正则表达式的结果。")])])])}),[],!1,null,null,null);_.default=c.exports}}]);