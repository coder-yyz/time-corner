(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{688:function(t,a,s){"use strict";s.r(a);var e=s(2),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"算法基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法基本概念"}},[t._v("#")]),t._v(" 算法基本概念")]),t._v(" "),a("p",[t._v("🙋什么是计算思维？")]),t._v(" "),a("p",[t._v("2006 年，美国卡内基梅隆大学的 Jeannette M. Wing 教授首次提出了计算思维的概念。")]),t._v(" "),a("p",[t._v("谷歌公司为教育者开发了一套计算思维的课程：")]),t._v(" "),a("ol",[a("li",[t._v("分解")]),t._v(" "),a("li",[t._v("模式识别")]),t._v(" "),a("li",[t._v("抽象")]),t._v(" "),a("li",[t._v("算法")])]),t._v(" "),a("p",[a("strong",[t._v("分解")])]),t._v(" "),a("p",[t._v("decomposition")]),t._v(" "),a("p",[t._v("将一个复杂的问题拆解成一个一个简单的问题，然后逐一击破。")]),t._v(" "),a("p",[t._v("比如在设计一个复杂的系统的时候，也会采用分解的思想：")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    System"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("Sub-System1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    System"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("Sub-System2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Sub-System2"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("Sub-System2-1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Sub-System2"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("Sub-System2-2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("模式识别")])]),t._v(" "),a("p",[t._v("一些问题具备相同的属性或者说相似之处，这些相似之处被称之为 "),a("strong",[t._v("模式")]),t._v("。")]),t._v(" "),a("p",[t._v("模式识别指的就是在一组数据中找出特征或规则，用于对数据进行分类，以作为决策判断的依据。")]),t._v(" "),a("p",[a("strong",[t._v("抽象")])]),t._v(" "),a("ul",[a("li",[t._v("现实生活中：“抽象”，代表模糊不清的意思")]),t._v(" "),a("li",[t._v("计算机科学：“抽象”，提取问题的关键部分，忽略无关紧要的细节部分。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取关键的信息，也就是这里程序会用到的信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("前端开发中组件库也是一种抽象，headless 无头组件库，更是一种抽象，专注于组件的逻辑功能。")]),t._v(" "),a("p",[a("strong",[t._v("算法")])]),t._v(" "),a("p",[t._v("本质就是解决问题的方法和步骤。")]),t._v(" "),a("p",[t._v("将大象装入冰箱需要几个步骤？")]),t._v(" "),a("ol",[a("li",[t._v("打开冰箱门")]),t._v(" "),a("li",[t._v("将大象塞进去")]),t._v(" "),a("li",[t._v("关上冰箱门")])]),t._v(" "),a("p",[t._v("一瓶可乐和一瓶雪碧，如何做交换？")]),t._v(" "),a("ol",[a("li",[t._v("拿一个空瓶（A），将可乐瓶里面的可乐倒进去")]),t._v(" "),a("li",[t._v("将雪碧瓶里面的雪碧倒入空的可乐瓶")]),t._v(" "),a("li",[t._v("将瓶A里面的可乐倒入空的雪碧瓶")])]),t._v(" "),a("p",[a("strong",[t._v("算法的条件（要求）")])]),t._v(" "),a("p",[t._v("一个算法必须要符合以下 5 个条件：")]),t._v(" "),a("ol",[a("li",[t._v("输入：一个算法有 0 个或者多个输入，并且这些输入要有明确的描述或者含义")]),t._v(" "),a("li",[t._v("输出：至少会有一个输出结果")]),t._v(" "),a("li",[t._v("明确性：算法设计中的每一个步骤必须是简洁明确的")]),t._v(" "),a("li",[t._v("有限性：你设计的算法在有限的步骤后会结束")]),t._v(" "),a("li",[t._v("有效性：算法的步骤清楚而且是可行，所谓可行，指的是只要时间允许，我甚至可以使用笔和纸来求出答案")])]),t._v(" "),a("p",[a("strong",[t._v("算法的描述")])]),t._v(" "),a("p",[t._v("如何来做一个算法的表达，将我的算法设计传达给别人。")]),t._v(" "),a("ol",[a("li",[t._v("自然语言描述：所谓自然语言，就是指中文、英文这种语言来描述算法。缺点：描述算法的时候比较冗余，而且通过自然语言描述算法的时候，对方容易产生理解上的偏差。")]),t._v(" "),a("li",[t._v("流程图")]),t._v(" "),a("li",[t._v("伪代码")])]),t._v(" "),a("p",[a("strong",[t._v("流程图")])]),t._v(" "),a("ol",[a("li",[t._v("椭圆：表示算法的开始和结束")]),t._v(" "),a("li",[t._v("平行四边形：表示算法的输入和输出")]),t._v(" "),a("li",[t._v("矩形：表示处理的步骤")]),t._v(" "),a("li",[t._v("菱形：表示条件或者说分支")]),t._v(" "),a("li",[t._v("流程线：连接上述的图形")])]),t._v(" "),a("p",[a("strong",[t._v("伪代码")])]),t._v(" "),a("p",[t._v("伪代码也是有语法的规定的。")]),t._v(" "),a("ol",[a("li",[t._v("输入输出一个值")])]),t._v(" "),a("div",{staticClass:"language-pseudocode extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('INPUT StudentName\nOUTPUT "You have made an error"\nOUTPUT StudentName\nOUTPUT "Student name is ", StudentName\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("变量初始化")])]),t._v(" "),a("div",{staticClass:"language-pseudocode extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Counter ← 1\nCounter ← Counter + 1\nMyChar ← "A"\nLetterValue ← ASC(MyChar)\nStudentMark ← 40\nPercentage ← (StudentMark / 80) * 100\nOldstring ← "Your mark is"\nNewString ← OldString & " ninety-seven"\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("分支")])]),t._v(" "),a("div",{staticClass:"language-pseudocode extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('IF MyValue > YourValue\n THEN\n \tOUTPUT "I win"\n ELSE\n \tOUTPUT "You win"\nENDIF\n')])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("循环")])]),t._v(" "),a("div",{staticClass:"language-pseudocode extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Total ← 0\nFOR Counter ← 1 TO 10\n OUTPUT "Enter a number "\n INPUT Number\n Total ← Total + Number\nNEXT Counter\nOUTPUT "The total is ", Total\n')])])])])}),[],!1,null,null,null);a.default=v.exports}}]);