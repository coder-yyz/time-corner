(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{699:function(v,_,l){"use strict";l.r(_);var t=l(2),i=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[v._v("#")]),v._v(" 数据结构")]),v._v(" "),_("p",[v._v("🙋什么是数据结构")]),v._v(" "),_("p",[v._v("英语 Data Structrue")]),v._v(" "),_("p",[v._v("回答：在计算机中 "),_("strong",[v._v("存储")]),v._v(" 和 "),_("strong",[v._v("组织")]),v._v(" 数据的方式。")]),v._v(" "),_("ul",[_("li",[v._v("书架（内存）")]),v._v(" "),_("li",[v._v("书（数据）")]),v._v(" "),_("li",[v._v("存放的方式（不同的存放方式对应的就是数据结构）\n"),_("ul",[_("li",[v._v("竖着一本一本的放")]),v._v(" "),_("li",[v._v("横着一本一本的放")]),v._v(" "),_("li",[v._v("斜着一本一本的放")]),v._v(" "),_("li",[v._v("....")])])])]),v._v(" "),_("p",[v._v("数据结构不仅仅是定义了数据元素之间的关系，还定义了能够操作这些数据的方法。")]),v._v(" "),_("p",[_("strong",[v._v("数据结构分类")])]),v._v(" "),_("ol",[_("li",[v._v("物理结构：数据在计算机内存中真实的存储方式")]),v._v(" "),_("li",[v._v("逻辑结构：描述数据元素之间的逻辑关系")])]),v._v(" "),_("p",[_("strong",[v._v("逻辑结构")])]),v._v(" "),_("ol",[_("li",[v._v("线性结构：排成一个线性的序列\n"),_("ul",[_("li",[v._v("数组")]),v._v(" "),_("li",[v._v("链表：由一个一个节点组成，每个节点会指向下一个节点")]),v._v(" "),_("li",[v._v("栈：只有一个出口，因此先进后出，后进先出")]),v._v(" "),_("li",[v._v("队列：有两个口，一个是入口，一个是出口。先进先出，后进后出")])])]),v._v(" "),_("li",[v._v("非线性结构\n"),_("ul",[_("li",[v._v("树：由一个一个节点组成的一个层次结构。例如 DOM 树就是一个典型的树结构。")]),v._v(" "),_("li",[v._v("图：由顶点和边组成的网络结构。")]),v._v(" "),_("li",[v._v("集合：Set，存储一组不重复的元素，其实这种数据结构表示的就是数学里面的集合结构，经常涉及的操作：并集、交集、差集...")]),v._v(" "),_("li",[v._v("字典：也被称之为映射（Map），存储一组一组的键值对，通过键可以快速的找到值。")])])])]),v._v(" "),_("p",[_("strong",[v._v("物理结构")])]),v._v(" "),_("p",[v._v("就只有 2 种，数组和链表。表示的是内存中真实的存储数据的方式：")]),v._v(" "),_("ul",[_("li",[v._v("顺序存储")]),v._v(" "),_("li",[v._v("链式存储")])]),v._v(" "),_("p",[v._v("也就是说，其他的逻辑结构都是依靠这两种结构来存储的。")]),v._v(" "),_("p",[_("strong",[v._v("没有最好的数据结构‼️")])]),v._v(" "),_("p",[v._v("没有最好的数据结构，只有最合适的数据结构。")]),v._v(" "),_("ul",[_("li",[v._v("数组：在内存中是一段连续的空间。这意味着在数组中查找一个数的时候，速度是很快的。因为只需要做一定的偏移就能够找到。但是要插入或者删除一个数，就比较麻烦，后面所有的元素都需要前移或者后移。")]),v._v(" "),_("li",[v._v("链表：每个元素之间并非连续存储，彼此之间会有一个 next 字段指向下一个元素。查找比较麻烦，需要从头节点开始一个一个往后找，但是插入和删除就比较轻松。")])])])}),[],!1,null,null,null);_.default=i.exports}}]);