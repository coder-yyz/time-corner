(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{560:function(t,e,r){"use strict";r.r(e);var n=r(2),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"generator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[t._v("#")]),t._v(" generator")]),t._v(" "),e("h2",{attrs:{id:"基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),e("p",[t._v("生成器（Generator）是ES6引入的一种特殊函数，通过在函数名前添加"),e("em",[t._v("号定义（如function")]),t._v(" gen()），具备"),e("em",[t._v("暂停和恢复执行")]),t._v("的能力。其核心在于yield关键字，用于中断函数执行并返回中间值，调用next()方法可恢复执行。生成器返回的是一个迭代器对象，遵循迭代器协议（包含value和done属性）。")]),t._v(" "),e("p",[t._v("核心特点：")]),t._v(" "),e("ul",[e("li",[t._v("暂停与恢复：通过yield暂停函数执行，保存当前上下文（变量状态、执行位置），下次调用next()时恢复。")]),t._v(" "),e("li",[t._v("双向通信：next()方法可传递参数到生成器内部，作为上一个yield表达式的返回值。")])])])}),[],!1,null,null,null);e.default=a.exports}}]);